{"version":3,"sources":["auth/functions.js","components/NavBar/navButtons.jsx","components/NavBar/index.jsx","components/Pages/home/index.jsx","data.js","components/Pages/courses/index.jsx","components/Pages/courses/agendas/vaultEntAgenda.pdf","components/Pages/courses/agendas/vaultEntAgenda.jsx","components/Pages/courses/agendas/TFFAgenda.jsx","components/Pages/labs/index.jsx","components/Pages/schedule/index.jsx","components/Pages/admin/adminNav/index.jsx","components/Pages/admin/adminContext.js","components/Pages/admin/components/sessionList.jsx","components/Pages/admin/components/sessionCreate.jsx","components/Pages/admin/components/sessionDetails.jsx","components/Pages/admin/index.jsx","components/Pages/profile/index.jsx","components/Pages/register/index.jsx","App.jsx","index.js"],"names":["getAcademyCookie","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","isSignedIn","userObj","val","academy_cookie","decoded_cookie","slice","replace","match","octal","String","fromCharCode","parseInt","JSON","parse","signOut","window","location","reload","user","Roles","isAdmin","role","Button","variant","href","Avatar","className","src","picture","alt","LoginButton","id","process","class","LogoutButton","onClick","NavBar","Navbar","bg","Container","Brand","width","Home","Card","Text","children","Courses","VaultEntAgenda","file","agendaPDF","pageNumber","TFFAgenda","renderHTML","Labs","Schedule","useState","data","setData","getData","a","axios","get","response","sort","b","dateFrom","localeCompare","useEffect","rehypePlugins","rehypeRaw","map","key","index","courseId","agenda","dateTo","timeFrom","timeTo","timezone","dateFromDisplay","moment","format","dateToDisplay","timeFromDisplay","timeToDisplay","regLink","loadCourses","console","log","loadInvites","loadMembers","loadAccessCodes","AdminNav","style","color","target","sessionContext","createContext","sessionId","setSessionId","componentSwitcherContext","showSessionList","setshowSessionList","showSessionCreate","setSessionCreate","showSessionDetails","setshowSessionDetails","SessionList","useContext","instructor","showDetails","SessionCreate","agendaValue","setAgenda","dateFromValue","setDateFrom","dateToValue","setDateTo","timeFromValue","setTimeFrom","timeToValue","setTimeTo","timezoneValue","setTimezone","locationValue","setLocation","capacityValue","setCapacity","course","learners","capacity","Form","Select","onChange","event","value","dateFormat","selected","date","selectsStart","startDate","endDate","selectsEnd","minDate","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","type","fetch","method","headers","body","stringify","catch","err","SessionDetails","sessionURL","sessionData","setSessionData","getSessionData","sessionResponse","Admin","componentSwitcherObj","sessionContextObj","Provider","Profile","email","vouchers","courses","Register","URLSearchParams","search","memberId","courseURL","memberURL","regName","setName","regCompany","setCompany","regEmail","setEmail","courseData","setCourseData","memberData","setMemberData","voucherCode","setVoucherCode","getCourseData","courseResponse","getMemberData","memberResponse","credits","onSubmit","e","preventDefault","size","numCredits","disabled","renderRegButton","App","path","exact","element","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.323a43fe.chunk.js","sourcesContent":["const getAcademyCookie = () => {\n  var name = \"academy_user=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nconst decodeCookie = (val) => {\n  if (val.indexOf('\\\\') === -1) {\n      return val;  // not encoded\n  }\n  val = val.slice(1, -1).replace(/\\\\\"/g, '\"');\n  val = val.replace(/\\\\(\\d{3})/g, function(match, octal) {\n      return String.fromCharCode(parseInt(octal, 8));\n  });\n  return val.replace(/\\\\\\\\/g, '\\\\');\n}\n\nexport const isSignedIn = () => {\n  if (getAcademyCookie() === \"\") {\n    return 0;\n  } else {\n  return 1;\n  }\n};\n\nexport const userObj = () => {\n  const academy_cookie = getAcademyCookie();\n  const decoded_cookie = decodeCookie(academy_cookie);\n  const userJson = JSON.parse(decoded_cookie);\n  return (userJson);\n}\n\nexport const signOut = () => {\n\n  document.cookie = \"Cloud-CDN-Cookie=; max-age=0\";\n  document.cookie = \"academy_user=; max-age=0\";\n  window.location.reload();\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { isSignedIn, signOut, userObj } from '../../auth/functions';\n\nconst user = isSignedIn() ? userObj() : \"\";\n\nexport const Roles = () => {\n\n\n  const isAdmin = (user.role==='admin');\n\n  return isSignedIn() ? (\n    <>\n    {isAdmin ? <Button variant='dark navlink' href='/admin'>Admin</Button> : ''}\n    </>\n  )\n  : (\n    <div></div>\n  )\n};\n\nexport const Avatar = () => {\n\n  return isSignedIn() ? (\n    <>\n      <a href='/profile'>\n        <img\n          className='avatar'\n          src={user.picture}\n          alt='avatar'\n        />\n      </a>\n    </>\n  )\n  : (\n    <div></div>\n  )\n};\n\nexport const LoginButton = () => {\n\n  return isSignedIn() ? (\n    <div></div>\n  )\n    : (\n      <>\n        <div id=\"g_id_onload\" data-client_id={process.env.REACT_APP_GSI_CLIENTID} data-auto_prompt=\"false\" data-login_uri={process.env.REACT_APP_GSI_LOGINURI}></div>\n        <div id=\"signIn\" class=\"g_id_signin\" data-type=\"standard\" data-size=\"medium\" data-theme=\"filled_black\" data-shape=\"rectangular\"\n          data-logo_alignment=\"center\" data-width=\"180\">\n        </div>\n      </>\n    );\n};\n\nexport const LogoutButton = () => {\n\n  return isSignedIn() ? (\n    <Button variant='dark navlink' onClick={signOut}>Sign out</Button>\n  )\n    : (\n      <div></div>\n    );\n};","import React from 'react';\nimport { Navbar, Container, Button, } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Roles, Avatar, LoginButton } from './navButtons.jsx';\n\nconst NavBar = () => {\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"/\">\n            <img\n              src={process.env.REACT_APP_BRAND_IMG}\n              alt=\"brand logo\"\n              width={process.env.REACT_APP_BRAND_IMG_SIZE}\n            />{' '}\n          </Navbar.Brand>\n          <Button variant='dark navlink' href='/courses' >Courses</Button>\n          {/*<Button variant='dark navlink' href='/labs' >Labs</Button>*/}\n          <Button variant='dark navlink' href='/schedule' >Schedule</Button>\n        </Container>\n        <Container className=\"justify-content-end\">\n          <Roles />\n          <Avatar />\n          <LoginButton/>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { HomeMD } from '../../../data.js'\n\nconst Home = () => {\n\n  return (\n\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <img\n          src={process.env.REACT_APP_MAIN_LOGO}\n          alt=''\n          className='mainLogo mx-auto'\n        />\n        <Card.Text>\n          <div className='home-content'>\n            <ReactMarkdown children={HomeMD} />\n          </div>\n        </Card.Text>\n      </Card>\n    </>\n  );\n};\n\nexport default Home;","//file for content that will eventually pulled from external sources\n\nexport const HomeMD = (`\n    \\nEmpower your teams with Instructor Led Training (ILT) delivering product curriculum-based courses with HashiCorp Certified Instructors.\\n\\nHashiCorp Enterprise Academy helps accelerate the adoption of HashiCorp products and build institutional knowledge within your organization.\n`);\n\nexport const ScheduleMD = (`\n   For information about registering for our instructor-led training courses, contact: <b>academy@hashicorp.com</b><br><br>\n`);\n\nexport const CoursesMD = (`\n\n  [Vault for Enterprise Customers](/courses/vaultEntAgenda)\n\n  [Terraform Foundations](/courses/TFFAgenda)\n\n  Terraform Enterprise Adoption (coming late-2021)\n  `);\n\nexport const LabsMD = (`\n\n    ## Vault\n\n    [Vault EA Lab 1: Deploy a Consul Cluster](#)\n\n    [Vault EA Lab 2: Deploy a Vault Cluster](#)\n\n    [Vault EA Lab 3: Vault Operations](#)\n\n    [Vault EA Lab 4: Vault Replication](#)\n\n    [Vault EA Lab 5: Vault Tokens and Policies](#)\n\n    [Vault EA Lab 6A: Vault's LDAP Authentication Method](#)\n\n    [Vault EA Lab 6B: Vault's AWS Authentication Method](#)\n\n    [Vault EA Lab 6C: Vault's AppRole Authentication Method](#)\n\n    [Vault EA Lab 6D: Vault Kubernetes Authentication Methods](#)\n\n    [Vault EA Lab 7: Versioned Secrets](#)\n\n    [Vault EA Lab 8: Vault Agent](#)\n\n    [Vault EA Lab 9A - PKI Secrets Engine](#)\n\n    [Vault EA Lab 9B-1: AWS Secrets Engine](#)\n\n    [Vault EA Lab 9B-2: Google Cloud Secrets Engine](#)\n\n    [Vault EA Lab 9C: Database Secrets Engine](#)\n\n    ---\n\n    ## Terraform\n\n    Coming soon!\n`);","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { CoursesMD } from '../../../data.js';\n\n\n\nconst Courses = () => {\n  return (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <div className='course-content'>\n            <h1>Academy Course List</h1><hr />\n            <ReactMarkdown children={CoursesMD} />\n          </div>\n        </Card.Text>\n      </Card>\n    </>\n  );\n};\n\nexport default Courses;","export default __webpack_public_path__ + \"static/media/vaultEntAgenda.fd781e84.pdf\";","//fix CORS issue to load pdf from url instead of internal file\nimport { Card } from 'react-bootstrap';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport agendaPDF from './vaultEntAgenda.pdf';\n\nconst VaultEntAgenda = () => {\n\n  return (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <Document\n            file={agendaPDF}\n          >\n            <Page pageNumber={1} />\n            <Page pageNumber={2} />\n            <Page pageNumber={3} />\n          </Document>\n        </Card.Text>\n      </Card>\n    </>\n\n  );\n};\n\nexport default VaultEntAgenda;\n","import { Card } from 'react-bootstrap';\nimport renderHTML from 'react-render-html';\n\nconst html =\n  `\n    <div class=\"container\" style=\"margin-top: 100px;\">\n      <div>\n          <div style=\"text-align:center\"><img src=\"https://storage.googleapis.com/is-enablement-branding/Terraform_PrimaryLogo_Color_RGB.png\" width=\"400\"></div></br>\n          <h1 style=\"text-align: center;\">Terraform Academy Foundations ILT</h1></br>\n          <h2 style=\"text-align: center;\">Prerequisites</h2>\n          <p>To attend the Terraform Foundations training session there are a few prerequisites to ensure a successful experience.</p>\n          <p><b>Solid command line experience:</b></br>Most of the lab exercises are command line based. This course does not cover the basics of text based editing or command line basics. A good understanding of how to navigate the command line will ensure a good overall learning experience.</p></br>\n      </div>\n\n      <h2 style=\"text-align: center;\">Course Agenda</h2>\n\n      <h3>Day 1</h3>\n\n      <table class=\"table-bordered academy-table\">\n          <colgroup>\n              <col class=\"w\">\n              <col>\n          </colgroup>\n          <tbody>\n              <tr><td style=\"font-weight: bold; font-size:initial\">Module</td><td style=\"font-weight: bold; font-size:initial\">Description</td></tr>\n              <tr><td>Introduction to Terraform </td>\n                  <td>Overview of Terraform, Infrastructure as Code, Terraform vs. other tools.</td></tr>\n              <tr><td>How Terraform Works</td>\n                  <td>Discuss the plugin model, state, versioning. Covers the workflow of init, plan, apply.</td></tr>\n              <tr><td>Terraform Command Line Interface</td>\n                  <td>Learn basic Terraform CLI commands.</td></tr>\n              <tr><td>Lab 1 - CLI</td>\n                  <td>Get familiar with the command line. Run commands like refresh, help, fmt and show.</td></tr>\n              <tr><td>Terraform Language</td>\n                  <td>Covers the Terraform syntax and resource configuration. Discuss variables, outputs, interpolations and data sources.</td></tr>\n              <tr><td>Lab 2 - Basic HCL</td>\n                  <td>Run basic Terraform code and work with variables.</td></tr>\n              <tr><td>Terraform State</td>\n                  <td>Deep dive into Terraform state. Understand the purpose of state. Learn about local state versus remote state. Understand the usage of Terraform import.</td></tr>\n              <tr><td>Lab 3 - State</td>\n                  <td>Work with Terraform state. Get hands on with terraform state commands. Learn how state file works and how it changes.</td></tr>\n          </tbody>\n      </table>\n\n      <h3>Day 2</h3>\n\n      <table class=\"table-bordered academy-table\">\n          <colgroup>\n              <col class=\"w\">\n              <col>\n          </colgroup>\n          <tbody>\n              <tr><td style=\"font-weight: bold; font-size:initial\">Module</td><td style=\"font-weight: bold; font-size:initial\">Description</td></tr>\n              <tr><td>Providers</td>\n                  <td>Understand providers, configuring multiple providers and provider dependencies.</td></tr>\n              <tr><td>Lab 4 - Providers</td>\n                  <td>Use multiple providers in Terraform configuration.</td></tr>\n              <tr><td>Cloud Authentication</td>\n                  <td>Learn different methods for authentication to the cloud.</td></tr>\n              <tr><td>Modules</td>\n                  <td>Understand module organization and usage. The input and outputs of modules and discover modules from the module registry.</td></tr>\n              <tr><td>Lab 5 - Modules</td>\n                  <td>Build a module and use it.</td></tr>\n              <tr><td>Terraform Versioning</td>\n                  <td>Explore Terraform core versions and provider versions. Discuss dependencies, pinning and upgrading versions.</td></tr>\n              <tr><td>Terraform Language (cont.)</td>\n                  <td>Look at more advanced usage in Terraform code such as functions and locals. Learn about conditional expressions, for loops, and dynamic blocks. </td></tr>\n              <tr><td>Lab 6 - Functions</td>\n                  <td>Work with a variety of built-in Terraform functions.</td></tr>\n              <tr><td>Lab 7 - Expressions</td>\n                  <td>Refactor Terraform code to make use of expressions.</td></tr>\n          </tbody>\n      </table>\n\n      <h3>Day 3</h3>\n\n      <table class=\"table-bordered academy-table\">\n          <colgroup>\n              <col class=\"w\">\n              <col>\n          </colgroup>\n          <tbody>\n              <tr><td style=\"font-weight: bold; font-size:initial\">Module</td><td style=\"font-weight: bold; font-size:initial\">Description</td></tr>\n              <tr><td>Template Files</td>\n                  <td>Discuss the use of the template function, how to use interpolation in a template file and real world use cases for templates.</td></tr>\n              <tr><td>Lab 8 - Templates</td>\n                  <td>Create and render a template file.</td></tr>\n              <tr><td>Provisioners</td>\n                  <td>Explore the use of provisioners, cover local-exec and null_resource.</td></tr>\n              <tr><td>Lab 9 - Provisioners</td>\n                  <td>Get hands on with using provisioners.</td></tr>\n              <tr><td>Terraform Module Development</td>\n                  <td>Learn about organizing Terraform code. Validating modules. Understand the monolith repo versus using multiple repos.</td></tr>\n              <tr><td>Testing Terraform</td>\n                  <td>Covers unit testing and acceptance testing for Terraform code and modules.</td></tr>\n              <tr><td>Recommended Patterns</td>\n                  <td>Discuss the workflow overview, recognized personas and adoption stages for evolving Terraform adoption.</td></tr>\n              <tr><td>Lab 10 - Best Practices</td>\n                  <td>Refactor Terraform code to use some of the recommended best practices.</td></tr>\n          </tbody>\n      </table>\n  </div>\n  `\n\nconst TFFAgenda = () => {\n  return (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <div>{renderHTML(html)}</div>\n        </Card.Text>\n      </Card>\n    </>\n  );\n};\n\nexport default TFFAgenda;","import { Card } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { LabsMD } from '../../../data.js';\n\n\nconst Labs = () => {\n  return (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <div className='course-content'>\n            <h1>Enterprise Academy Labs</h1><hr />\n            <ReactMarkdown children={LabsMD} />\n          </div>\n        </Card.Text>\n      </Card>\n    </>\n  );\n};\n\nexport default Labs;","//need to handle no api server response\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Button, Card } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport { ScheduleMD } from '../../../data.js'\n\nconst Schedule = () => {\n\n  const [data, setData] = useState([]);\n\n  //ToDo - check for valid response before compare\n  const getData = async () => {\n    const response = await axios.get(process.env.REACT_APP_ROOT_URL+process.env.REACT_APP_REPORT_PATH)\n    response.data.data.sort((a, b) => a.dateFrom.localeCompare(b.dateFrom));\n    setData(response.data)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const renderHeader = () => {\n    let headerElement = ['Agenda', 'Date', 'Time', 'Location', 'Register']\n\n    return headerElement.map((key, index) => {\n      return <th key={index}>{key}</th>\n    })\n  }\n\n  const renderBody = () => {\n    return data.data && data.data.map(({ courseId, agenda, dateFrom, dateTo, timeFrom, timeTo, timezone, location }) => {\n\n      //https://momentjs.com/docs/#/displaying/format/\n      //fix for when dates cross month\n      //decide whether to show timezone from field or from date format\n      const dateFromDisplay = moment(dateFrom).format(\"MMM D\")\n      const dateToDisplay = moment(dateTo).format(\"D\")\n      const timeFromDisplay = moment(timeFrom).format(\"H:mma\")\n      const timeToDisplay = moment(timeTo).format(\"H:mma\")\n      const regLinkCourseId = courseId\n      const regLink = '/register?id='+regLinkCourseId\n   \n      return (\n        <>\n        <tr key={courseId}>\n          <td>{agenda}</td>\n          <td>{dateFromDisplay}-{dateToDisplay}</td>\n          <td>{timeFromDisplay} - {timeToDisplay} {timezone}</td>\n          <td>{location}</td>\n          <td><Button variant='dark regButton' href={regLink}>Register</Button></td>\n        </tr>\n        </>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <div>\n            <h1>Enterprise Academy Course Schedule</h1><hr />\n          </div>\n          <ReactMarkdown rehypePlugins={[rehypeRaw]} children={ScheduleMD} />\n          <table id='schedule'>\n            <thead>\n              <tr>{renderHeader()}</tr>\n            </thead>\n            <tbody>\n              {renderBody()}\n            </tbody>\n          </table>\n        </Card.Text>\n      </Card>\n    </>\n  )\n}\n\nexport default Schedule;","import { Navbar, Container, Button, } from 'react-bootstrap';\n\nconst loadCourses = () => {\n  console.log('load courses');\n}\nconst loadInvites = () => {\n  console.log('load invites');\n}\nconst loadMembers = () => {\n  console.log('load members');\n}\nconst loadAccessCodes = () => {\n  console.log('load access codes');\n}\n\nconst AdminNav = () => {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Button variant='dark' className=\"adminButton\" onClick={loadCourses}>Course Sessions</Button>\n          <Button variant='dark' className=\"adminButton\" onClick={loadInvites}>Instruqt Invites</Button>\n          <Button variant='dark' className=\"adminButton\" onClick={loadMembers}>Academy Members</Button>\n          <Button variant='dark' className=\"adminButton\" onClick={loadAccessCodes}>Access Codes</Button>\n          <Button variant='dark' className=\"adminButton\" href=\"/apidoc\" style={{ color: \"white\" }} target={\"_blank\"}>API</Button>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNav;","import { createContext } from 'react';\n\nexport const sessionContext = createContext({\n  sessionId: '',\n  setSessionId: () => {}\n});\n\nexport const componentSwitcherContext = createContext({\n    showSessionList: false,\n    setshowSessionList: () => { },\n    showSessionCreate: false,\n    setSessionCreate: () => { },\n    showSessionDetails: false,\n    setshowSessionDetails: () => { }\n  })","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Button, Container } from 'react-bootstrap';\nimport { sessionContext, componentSwitcherContext } from '../adminContext';\n\nconst SessionList = () => {\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    //ToDo - check for valid response before compare\n    const getData = async () => {\n      const response = await axios.get(process.env.REACT_APP_ROOT_URL + process.env.REACT_APP_REPORT_PATH)\n      response.data.data.sort((a, b) => a.dateFrom.localeCompare(b.dateFrom));\n      setData(response.data)\n    }\n    getData()\n  }, [])\n\n  const { setshowSessionDetails } = useContext(componentSwitcherContext);  \n  const { setSessionId } = useContext(sessionContext);\n\n  const renderHeader = () => {\n    let headerElement = ['Agenda', 'Date', 'Instructor']\n\n    return headerElement.map((key, index) => {\n      return <th key={index}>{key}</th>\n    })\n  }\n\n  const renderBody = () => {\n    return data.data && data.data.map(({ courseId, agenda, dateFrom, dateTo, instructor }) => {\n\n      const dateFromDisplay = moment(dateFrom).format(\"MMM D\")\n      const dateToDisplay = moment(dateTo).format(\"MMM D\")\n      const showDetails = (courseId) => {\n        setSessionId(courseId)\n        setshowSessionDetails(true)\n        \n      };\n\n      return (\n        <tr key={courseId}>\n          <td>{agenda}</td>\n          <td>{dateFromDisplay} - {dateToDisplay}</td>\n          <td>{instructor}</td>\n          <td><td><Button variant='dark' onClick={() => showDetails(courseId)}>Details</Button></td></td>\n        </tr>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Container className='adminContainer'>\n        <h3>Session List</h3>\n        <table id='schedule'>\n          <thead>\n            <tr>{renderHeader()}</tr>\n          </thead>\n          <tbody>\n            {renderBody()}\n          </tbody>\n        </table>\n        <Button variant='dark'>\n          new course\n        </Button>\n      </Container>\n    </>\n  );\n};\n\nexport default SessionList;","import React, { useState } from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst SessionCreate = () => {\n  //ToDo - revisit how dates and times are stored as it may effect calander invite automation\n  const [agendaValue, setAgenda] = useState('Terraform Foundations'); //revist this default value\n  const [dateFromValue, setDateFrom] = useState(null);\n  const [dateToValue, setDateTo] = useState(null);\n  const [timeFromValue, setTimeFrom] = useState(null);\n  const [timeToValue, setTimeTo] = useState(null);\n  const [timezoneValue, setTimezone] = useState('Central'); //revist this default value\n  const [locationValue, setLocation] = useState('Online (US)'); //revist this default value\n  const [capacityValue, setCapacity] = useState('20');\n\n  var agenda = \"\";\n  var dateFrom = \"\";\n  var dateTo = \"\";\n  var timeFrom = \"\";\n  var timeTo = \"\";\n  var timezone = \"\";\n  var location = \"\";\n  var instructor = \"\";\n  var learners = [\"\"];\n  var capacity = [\"\"];\n  var data = { agenda, dateFrom, dateTo, timeFrom, timeTo, timezone, location, instructor, learners, capacity };\n  var course = { data };\n  //ToDo - add check for empty values\n  course.data.agenda = agendaValue;\n  course.data.dateFrom = dateFromValue;\n  course.data.dateTo = dateToValue;\n  course.data.timeFrom = timeFromValue;\n  course.data.timeTo = timeToValue;\n  course.data.timezone = timezoneValue;\n  course.data.location = locationValue;\n  course.data.capacity = capacityValue;\n\n  //ToDo - Put this inside useEffect   \n  const PostCourse = () => {\n    fetch(process.env.REACT_APP_COURSE_PATH, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(course),\n    })\n      .catch((err) => console.log('error'))\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      <Container className='adminContainer'>\n          <h3>Create Session</h3>\n          <form>\n            <fieldset>\n              <label>\n                <p>Agenda</p>\n                <Form.Select\n                  onChange={(event) => setAgenda(event.target.value)}\n                  value={agendaValue}\n                >\n                  <option value=\"Terraform Foundations\">Terraform Foundations</option>\n                  <option value=\"Vault Enterprise\">Vault Enterprise</option>\n                </Form.Select>\n              </label><br />\n              <label>\n                <p>Start Date</p>\n                <DatePicker\n                  dateFormat=\"yyyy.MM.dd\"\n                  selected={dateFromValue}\n                  onChange={(date) => setDateFrom(date)}\n                  selectsStart\n                  startDate={dateFromValue}\n                  endDate={dateToValue}\n                />\n              </label>\n              -\n              <label>\n                <p>End Date</p>\n                <DatePicker\n                  dateFormat=\"yyyy.MM.dd\"\n                  selected={dateToValue}\n                  onChange={(date) => setDateTo(date)}\n                  selectsEnd\n                  startDate={dateFromValue}\n                  endDate={dateToValue}\n                  minDate={dateFromValue}\n                />\n              </label><br />\n              <label>\n                <p>Start Time</p>\n                <DatePicker\n                  selected={timeFromValue}\n                  onChange={(date) => setTimeFrom(date)}\n                  showTimeSelect\n                  showTimeSelectOnly\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"h:mm aa\"\n                />\n              </label>\n              -\n              <label>\n                <p>End Time</p>\n                <DatePicker\n                  selected={timeToValue}\n                  onChange={(date) => setTimeTo(date)}\n                  showTimeSelect\n                  showTimeSelectOnly\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"h:mm aa\"\n                />\n              </label><br />\n              <label>\n                <p>Timezone</p>\n                <Form.Select\n                  onChange={(event) => setTimezone(event.target.value)}\n                  value={timezoneValue}\n                >\n                  <option value=\"Central\">Central</option>\n                  <option value=\"CET\">CET</option>\n                </Form.Select>\n              </label><br />\n              <label>\n                <p>Location</p>\n                <Form.Select\n                  onChange={(event) => setLocation(event.target.value)}\n                  value={locationValue}\n                >\n                  <option value=\"Online (US)\">Online (US)</option>\n                  <option value=\"Online (EMEA)\">Online (EMEA)</option>\n                </Form.Select>\n              </label><br />\n              <label>\n                <p>Capacity</p>\n                <input\n                  type=\"text\"\n                  value={capacityValue}\n                  onChange={(event) => setCapacity(event.target.value)}\n                />\n              </label>\n            </fieldset>\n            {/*ToDo - check for empty values and prompt before submitting*/}\n            <Button variant='dark' onClick={PostCourse}>Submit</Button>\n          </form>\n\n      </Container>\n    </>\n  );\n};\n\nexport default SessionCreate;","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\nimport { sessionContext } from '../adminContext'\n\nconst SessionDetails = () => {\n  \n  const { sessionId } = useContext(sessionContext);\n  const sessionURL = process.env.REACT_APP_ROOT_URL + process.env.REACT_APP_COURSE_PATH + '?id=' + sessionId;\n  const [sessionData, setSessionData] = useState([]);\n\n  useEffect(() => {\n    const getSessionData = async () => {\n      const sessionResponse = await axios.get(sessionURL)\n      setSessionData(sessionResponse.data)\n    }\n    getSessionData()\n  }, [sessionURL]);\n\n  const displaySession = () => {\n    return sessionData.data && sessionData.data.map(({ sessionId, agenda, dateFrom, dateTo, timeFrom, timeTo, timezone, location, instructor, learners }) => {\n\n      //https://momentjs.com/docs/#/displaying/format/\n      //fix for when dates cross month\n      //decide whether to show timezone from field or from date format\n      const dateFromDisplay = moment(dateFrom).format(\"MMM D\")\n      const dateToDisplay = moment(dateTo).format(\"D\")\n      const timeFromDisplay = moment(timeFrom).format(\"H:mma\")\n      const timeToDisplay = moment(timeTo).format(\"H:mma\")\n\n      return (\n        <>\n          <b>Agenda: </b>{agenda}<br/>\n          <b>Dates: </b>{dateFromDisplay}-{dateToDisplay}<br/>\n          <b>Time: </b>{timeFromDisplay} - {timeToDisplay} {timezone}<br/>\n          <b>Location: </b>{location}<br/>\n          <b>Instructor: </b>{instructor}<br/>\n          <b>Learners (ToDo - convert these userIDs to names and emails): </b>{learners}\n        </>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Container className='adminContainer'>\n        <h3>Session Details</h3>\n        {displaySession()}\n      </Container>\n    </>\n  );\n};\n\nexport default SessionDetails;","//add check for admin role before rendering, or redirect to login\nimport React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport AdminNav from './adminNav';\nimport { sessionContext, componentSwitcherContext } from './adminContext';\nimport SessionList from './components/sessionList.jsx';\nimport SessionCreate from './components/sessionCreate.jsx'\nimport SessionDetails from './components/sessionDetails.jsx'\n\nconst Admin = () => {\n\n  const [showSessionList, setshowSessionList] = useState(true);\n  const [showSessionDetails, setshowSessionDetails] = useState(true);\n  const [showSessionCreate, setSessionCreate] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n\n  const componentSwitcherObj = {\n    showSessionList,\n    setshowSessionList,\n    showSessionDetails,\n    setshowSessionDetails,\n    showSessionCreate,\n    setSessionCreate\n  };\n\n  const sessionContextObj = {sessionId, setSessionId };\n\n  return (\n    <>\n   <Card className=\"m-5 p-3 shadow\">\n      <Card.Text>\n        <AdminNav/>\n        <componentSwitcherContext.Provider value={componentSwitcherObj}>\n        <sessionContext.Provider value={sessionContextObj}>\n        {showSessionList ? <SessionList /> : ''}\n        {showSessionCreate ? <SessionCreate /> : ''}\n        {showSessionDetails ? <SessionDetails /> : ''}\n        </sessionContext.Provider>\n        </componentSwitcherContext.Provider>\n      </Card.Text>\n    </Card>\n    </>\n  );\n};\n  \nexport default Admin;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { isSignedIn, userObj } from '../../../auth/functions.js';\nimport { LogoutButton } from '../../NavBar/navButtons';\n\nconst Profile = () => {\n\n  const user = isSignedIn() ? userObj() : \"\";\n\n  return isSignedIn() ? (\n    <>\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <h1>Profile</h1>\n          <hr />\n          <div className='profile'>\n            <img\n              src={user.picture}\n              alt='GImage'\n              className='profImg'\n            /><br />\n            Name: {user.name}<br />\n            Email: {user.email}<br /><br />\n            Access Level: {user.role}<br />\n            Voucher Codes Redeemed: {user.vouchers}<br />\n            Registered Courses: {user.courses}<br /><br />\n            <LogoutButton />\n          </div>\n        </Card.Text>\n      </Card>\n\n    </>\n  )\n    : (\n      <Card className=\"m-5 p-3 shadow\">\n        <Card.Text>\n          <div>Not signed in</div>\n        </Card.Text>\n      </Card>\n    );\n};\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Card, Button } from 'react-bootstrap';\nimport { isSignedIn, userObj } from '../../../auth/functions.js';\n\nconst Register = () => {\n\n  const courseId = new URLSearchParams(window.location.search).get('id');\n  const user = isSignedIn() ? userObj() : '';\n  const memberId = isSignedIn() ? user.id : '';\n  const courseURL = process.env.REACT_APP_ROOT_URL + process.env.REACT_APP_COURSE_PATH + '?id=' + courseId;\n  const memberURL = process.env.REACT_APP_ROOT_URL + process.env.REACT_APP_MEMBER_PATH + '?id=' + memberId;\n\n\n  const [regName, setName] = useState(user.name);\n  const [regCompany, setCompany] = useState('');\n  const [regEmail, setEmail] = useState(user.email);\n  const [courseData, setCourseData] = useState([]);\n  const [memberData, setMemberData] = useState([]);\n  const [voucherCode, setVoucherCode] = useState([]);\n\n  useEffect(() => {\n    const getCourseData = async () => {\n      const courseResponse = await axios.get(courseURL)\n      try{\n        setCourseData(courseResponse.data)\n      } catch { console.log('no response from api server: '+courseURL)}\n    }\n    getCourseData()\n    const getMemberData = async () => {\n      const memberResponse = await axios.get(memberURL)\n      try {\n        setMemberData(memberResponse.data)\n      } catch { console.log('no response from api server: '+memberURL)}\n    }\n    getMemberData()\n    //setCredits(memberResponse.data[0].credits)\n  }, [courseURL, memberURL]);\n\n  const selectedCourse = () => {\n    return courseData.data && courseData.data.map(({ courseId, agenda, dateFrom, dateTo, timeFrom, timeTo, timezone, location }) => {\n\n      //https://momentjs.com/docs/#/displaying/format/\n      //fix for when dates cross month\n      //decide whether to show timezone from field or from date format\n      const dateFromDisplay = moment(dateFrom).format(\"MMM D\")\n      const dateToDisplay = moment(dateTo).format(\"D\")\n      const timeFromDisplay = moment(timeFrom).format(\"H:mma\")\n      const timeToDisplay = moment(timeTo).format(\"H:mma\")\n\n      return (\n        <>\n          {agenda} {dateFromDisplay}-{dateToDisplay} {timeFromDisplay} - {timeToDisplay} {timezone} {location}\n        </>\n      )\n    })\n  }\n\n  const displayCredits = () => {\n    return memberData.data && memberData.data.map(({ credits }) => {\n      return (\n        <>\n        {credits}\n        </>\n      )\n    })\n  }\n\n  const renderRedeemButton = () => {\n    return(\n      <Button variant='dark redeemButton'type='submit'>Redeem Voucher Code</Button>\n    )\n  }\n\n  const handleRedeemSubmit = e => {\n\n    e.preventDefault()\n\n    fetch(process.env.REACT_APP_REDEEM_PATH+'?member_id='+memberId+'&access_code='+voucherCode, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: '',\n    })\n      .catch((err) => console.log('error'))\n    window.location.reload(true);\n    //ToDo - show Success after submission\n\n  }\n\n  const renderRegButton = () => {\n    let numCredits = 0;\n    try {\n      numCredits = memberData.data[0].credits;\n    } catch { }\n    \n    return (numCredits > 0) ? (\n      <Button variant='dark regButton' type='submit'>Register</Button>\n    ) : (\n      <Button variant='dark regButton' type='submit' disabled>Register</Button>\n    )\n  }\n\n  const handleRegistrationSubmit = e => {\n\n    e.preventDefault()\n    let data = { memberId, regName, regCompany, regEmail, courseId };\n\n    fetch(process.env.REACT_APP_REGISTER_PATH, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .catch((err) => console.log('no response from API server:'+process.env.REACT_APP_REGISTER_PATH))\n    //window.location.reload(false);\n    //ToDo - show Success after submission\n\n  }\n\n  return isSignedIn() ? (\n    <>\n    <Card className=\"m-5 p-3 shadow\">\n      <Card.Text>\n        <h1>Register</h1><hr />\n        <p>You have <b>{displayCredits()}</b> training credits available. Redeem a voucher code for training credits.<br />Contact <b>academy@hashicorp.com</b> for information about purchasing course access.<br />\n          <form onSubmit={handleRedeemSubmit}>\n          <input\n            name='redeemCode'\n            className='redeemCode'\n            value={voucherCode}\n            onChange={e => setVoucherCode(e.target.value)}\n          />\n          {renderRedeemButton()}\n          </form>\n        </p><hr />\n        <p><b>Selected Course:</b> {selectedCourse()}\n        </p>\n        <form onSubmit={handleRegistrationSubmit}>\n          <b>Name:</b>\n          <input\n            className='regName'\n            type='text'\n            size='25'\n            value={regName}\n            onChange={e => setName(e.target.value)}\n          />\n          <br />\n          <b>Company:</b>\n          <input\n            className='regCompany'\n            type='text'\n            size='25'\n            value={regCompany}\n            onChange={e => setCompany(e.target.value)}\n          />\n          <br />\n          <b>Email:</b>\n          <input\n            className='regEmail'\n            type='text'\n            size='25'\n            value={regEmail}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <br />\n          {renderRegButton()}\n        </form>\n      </Card.Text>\n    </Card>\n    </>\n  )\n    : (\n  <>\n    <Card className=\"m-5 p-3 shadow\">\n      <Card.Text>\n        <h1>Register</h1><hr />\n        <div>\n          Please sign in to register for a course session.\n        </div>\n      </Card.Text>\n    </Card>\n  </>\n)\n};\n\nexport default Register;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/NavBar';\nimport Home from './components/Pages/home';\nimport Courses from './components/Pages/courses';\nimport VaultEntAgenda from './components/Pages/courses/agendas/vaultEntAgenda.jsx';\nimport TFFAgenda from './components/Pages/courses/agendas/TFFAgenda.jsx';\nimport Labs from './components/Pages/labs';\nimport Schedule from './components/Pages/schedule';\nimport Admin from './components/Pages/admin';\nimport Profile from './components/Pages/profile';\nimport Register from './components/Pages/register';\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path='/' exact element={<Home />} />\n        <Route path='/courses' exact element={<Courses />} />\n        <Route path='/courses/vaultEntAgenda' exact element={<VaultEntAgenda />} />\n        <Route path='/courses/TFFAgenda' exact element={<TFFAgenda />} />\n        <Route path='/labs' exact element={<Labs />} />\n        <Route path='/schedule' exact element={<Schedule />} />\n        <Route path='/admin' exact element={<Admin />} />\n        <Route path='/profile' exact element={<Profile />} />\n        <Route path='/register' exact element={<Register />} />\n        <Route path='/*' element={<Home />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CookiesProvider } from 'react-cookie';\nimport './index.css';\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}